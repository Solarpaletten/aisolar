{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/lib/exportSRT.ts"],"sourcesContent":["// ==========================================\n// FILE: lib/exportSRT.ts\n// ==========================================\nexport function textToSRT(text: string, stepSec = 4): string {\n    const sentences = text.split(/(?<=[.!?])\\s+/).filter(Boolean)\n    const toTS = (s: number) => {\n      const hh = String(Math.floor(s / 3600)).padStart(2, '0')\n      const mm = String(Math.floor((s % 3600) / 60)).padStart(2, '0')\n      const ss = String(Math.floor(s % 60)).padStart(2, '0')\n      const ms = '000'\n      return `${hh}:${mm}:${ss},${ms}`\n    }\n    let srt = ''\n    let t = 0\n    sentences.forEach((sent, i) => {\n      const start = toTS(t)\n      const end = toTS(t + stepSec)\n      srt += `${i + 1}\\n${start} --> ${end}\\n${sent}\\n\\n`\n      t += stepSec\n    })\n    return srt.trim()\n  }\n  \n  export type Segment = { start: number; end: number; text: string; speaker?: string }\n  \n  export function segmentsToSRT(segments: Segment[]): string {\n    const toTS = (s: number) => {\n      const hh = String(Math.floor(s / 3600)).padStart(2, '0')\n      const mm = String(Math.floor((s % 3600) / 60)).padStart(2, '0')\n      const ss = String(Math.floor(s % 60)).padStart(2, '0')\n      const ms = '000'\n      return `${hh}:${mm}:${ss},${ms}`\n    }\n    return segments\n      .map((seg, i) => {\n        const line = seg.speaker ? `${seg.speaker}: ${seg.text}` : seg.text\n        return `${i + 1}\\n${toTS(seg.start)} --> ${toTS(seg.end)}\\n${line}`\n      })\n      .join('\\n\\n')\n  }\n  \n  "],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,yBAAyB;AACzB,6CAA6C;;;;;;;AACtC,SAAS,UAAU,IAAY;QAAE,UAAA,iEAAU;IAC9C,MAAM,YAAY,KAAK,KAAK,CAAC,0BAAiB,MAAM,CAAC;IACrD,MAAM,OAAO,CAAC;QACZ,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,OAAO,QAAQ,CAAC,GAAG;QACpD,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,AAAC,IAAI,OAAQ,KAAK,QAAQ,CAAC,GAAG;QAC3D,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;QAClD,MAAM,KAAK;QACX,OAAO,AAAC,GAAQ,OAAN,IAAG,KAAS,OAAN,IAAG,KAAS,OAAN,IAAG,KAAM,OAAH;IAC9B;IACA,IAAI,MAAM;IACV,IAAI,IAAI;IACR,UAAU,OAAO,CAAC,CAAC,MAAM;QACvB,MAAM,QAAQ,KAAK;QACnB,MAAM,MAAM,KAAK,IAAI;QACrB,OAAO,AAAC,GAAY,OAAV,IAAI,GAAE,MAAiB,OAAb,OAAM,SAAe,OAAR,KAAI,MAAS,OAAL,MAAK;QAC9C,KAAK;IACP;IACA,OAAO,IAAI,IAAI;AACjB;AAIO,SAAS,cAAc,QAAmB;IAC/C,MAAM,OAAO,CAAC;QACZ,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,OAAO,QAAQ,CAAC,GAAG;QACpD,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,AAAC,IAAI,OAAQ,KAAK,QAAQ,CAAC,GAAG;QAC3D,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;QAClD,MAAM,KAAK;QACX,OAAO,AAAC,GAAQ,OAAN,IAAG,KAAS,OAAN,IAAG,KAAS,OAAN,IAAG,KAAM,OAAH;IAC9B;IACA,OAAO,SACJ,GAAG,CAAC,CAAC,KAAK;QACT,MAAM,OAAO,IAAI,OAAO,GAAG,AAAC,GAAkB,OAAhB,IAAI,OAAO,EAAC,MAAa,OAAT,IAAI,IAAI,IAAK,IAAI,IAAI;QACnE,OAAO,AAAC,GAAY,OAAV,IAAI,GAAE,MAA2B,OAAvB,KAAK,IAAI,KAAK,GAAE,SAAyB,OAAlB,KAAK,IAAI,GAAG,GAAE,MAAS,OAAL;IAC/D,GACC,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/components/AISolarTranscriber.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { Upload, Download, FileAudio, FileVideo, Clock, HardDrive, Loader2, CheckCircle2, XCircle, Play, Trash2, Copy, Sun, Moon, Globe, Zap, Server, Settings, Languages } from 'lucide-react'\nimport { validateFile } from '@/lib/validation'\nimport { textToSRT } from '@/lib/exportSRT'\n\ninterface HistoryItem {\n  id: string\n  name: string\n  text: string\n  date: string\n  language?: string\n  engine?: string\n}\n\nconst AUDIO_FORMATS = ['mp3', 'wav', 'ogg', 'm4a', 'aac', 'flac', 'wma'];\nconst VIDEO_FORMATS = ['mp4', 'avi', 'mov', 'mkv', 'webm', 'flv', 'wmv', 'mpeg', 'mpg'];\n\nexport default function AISolarTranscriber() {\n  const [file, setFile] = useState<File | null>(null)\n  const [videoPreview, setVideoPreview] = useState<string>('')\n  const [transcript, setTranscript] = useState('')\n  const [progress, setProgress] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState(false)\n  const [darkMode, setDarkMode] = useState(true)\n  const [isDragging, setIsDragging] = useState(false)\n  const [showSettings, setShowSettings] = useState(false)\n  const [history, setHistory] = useState<HistoryItem[]>([])\n\n  // –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–µ–¥–∏–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n  const [mediaType, setMediaType] = useState<'audio' | 'video' | null>(null);\n  const [mediaDuration, setMediaDuration] = useState<number | null>(null);\n  const [processingStatus, setProcessingStatus] = useState<string>('');\n\n  const [engine, setEngine] = useState<'openai' | 'local'>('openai')\n  const [language, setLanguage] = useState('auto')\n  const [autoTranslate, setAutoTranslate] = useState(false)\n  const [targetLanguage, setTargetLanguage] = useState('ru')\n  const [enableSegmentation, setEnableSegmentation] = useState(false)\n  const [enableSpeakers, setEnableSpeakers] = useState(false)\n\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    const saved = localStorage.getItem('aisolar-history')\n    if (saved) {\n      try {\n        setHistory(JSON.parse(saved))\n      } catch (e) {\n        console.error('Failed to load history', e)\n      }\n    }\n  }, [])\n\n  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n  const detectMediaType = (filename: string): 'audio' | 'video' => {\n    const ext = filename.split('.').pop()?.toLowerCase() || '';\n    if (AUDIO_FORMATS.includes(ext)) return 'audio';\n    if (VIDEO_FORMATS.includes(ext)) return 'video';\n    return 'video';\n  };\n\n  const formatDuration = (seconds: number | null): string => {\n    if (!seconds || isNaN(seconds)) return '0:00';\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  };\n\n  const estimateProcessingTime = (duration: number | null): string => {\n    if (!duration) return '–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥';\n    const estimatedMinutes = Math.ceil((duration / 60) * 0.2);\n    if (estimatedMinutes < 1) return '~1 –º–∏–Ω—É—Ç—É';\n    if (estimatedMinutes === 1) return '~1 –º–∏–Ω—É—Ç—É';\n    if (estimatedMinutes < 5) return `~${estimatedMinutes} –º–∏–Ω—É—Ç—ã`;\n    return `~${estimatedMinutes} –º–∏–Ω—É—Ç`;\n  };\n\n  const saveToHistory = useCallback((name: string, text: string) => {\n    const newEntry: HistoryItem = {\n      id: Date.now().toString(),\n      name,\n      text,\n      date: new Date().toISOString(),\n      language,\n      engine\n    }\n    const updated = [newEntry, ...history].slice(0, 10)\n    setHistory(updated)\n    localStorage.setItem('aisolar-history', JSON.stringify(updated))\n  }, [history, language, engine])\n\n  const handleFileSelect = (selectedFile: File) => {\n    if (!selectedFile) return;\n\n    setFile(selectedFile);\n    setVideoPreview(URL.createObjectURL(selectedFile));\n\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞\n    const type = detectMediaType(selectedFile.name);\n    setMediaType(type);\n\n    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ\n    setTranscript('');\n    setMediaDuration(null);\n    setProcessingStatus('');\n\n    // –ü–æ–ª—É—á–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–¥–∏–∞\n    const mediaElement = document.createElement(type) as HTMLAudioElement | HTMLVideoElement;\n    mediaElement.src = URL.createObjectURL(selectedFile);\n    mediaElement.onloadedmetadata = () => {\n      setMediaDuration(mediaElement.duration);\n      URL.revokeObjectURL(mediaElement.src);\n    };\n  };\n\n  const startTranscription = async () => {\n    if (!file) return\n\n    setLoading(true)\n    setError('')\n    setSuccess(false)\n    setProgress('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...')\n    setProcessingStatus('‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–∞...');\n\n    try {\n      const formData = new FormData()\n      formData.append('file', file)\n      formData.append('engine', engine)\n      formData.append('language', language)\n      formData.append('enableSegmentation', String(enableSegmentation))\n      formData.append('enableSpeakers', String(enableSpeakers))\n      formData.append('translateTo', autoTranslate && targetLanguage ? targetLanguage : '')\n\n      setProcessingStatus('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–∞...');\n\n      const response = await fetch('/api/transcribe', {\n        method: 'POST',\n        body: formData\n      })\n\n      setProcessingStatus(\n        `üéôÔ∏è –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è... ${mediaDuration ? `(~${estimateProcessingTime(mediaDuration)})` : ''}`\n      );\n\n      if (!response.ok) {\n        if (response.status === 429) {\n          throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')\n        }\n        throw new Error(`HTTP ${response.status}`)\n      }\n\n      const reader = response.body?.getReader()\n      const decoder = new TextDecoder()\n      let finalText = ''\n\n      if (reader) {\n        while (true) {\n          const { value, done } = await reader.read()\n          if (done) break\n\n          const chunk = decoder.decode(value, { stream: true })\n          const lines = chunk.split('\\n').filter(Boolean)\n\n          for (const line of lines) {\n            try {\n              const data = JSON.parse(line)\n\n              if (data.type === 'progress') {\n                setProgress(data.message)\n              } else if (data.type === 'partial') {\n                setTranscript(data.text)\n              } else if (data.type === 'final') {\n                finalText = data.text\n                setTranscript(data.text)\n              } else if (data.type === 'error') {\n                throw new Error(data.message)\n              }\n            } catch (e) {\n              if (e instanceof Error && !e.message.includes('JSON')) {\n                throw e\n              }\n            }\n          }\n        }\n      }\n\n      setSuccess(true)\n      setProgress('–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! ‚úì')\n      setProcessingStatus('‚úÖ –ì–æ—Ç–æ–≤–æ!');\n\n      if (finalText) {\n        saveToHistory(file.name, finalText)\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'\n      setError(errorMessage)\n      setProcessingStatus('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏');\n    } finally {\n      setLoading(false)\n      setTimeout(() => setProcessingStatus(''), 3000);\n    }\n  }\n\n  const downloadFile = (name: string, content: string, type: string) => {\n    const blob = new Blob([content], { type })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = name\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 ${darkMode ? 'bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900' : 'bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50'}`}>\n      <div className=\"max-w-7xl mx-auto p-6 space-y-8\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className={`text-4xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'} flex items-center gap-3`}>\n              <span className=\"text-5xl\">üåû</span>\n              AISOLAR\n              <span className={`text-sm px-3 py-1 rounded-full ${darkMode ? 'bg-purple-500/20 text-purple-300' : 'bg-purple-100 text-purple-700'}`}>\n                v2.0\n              </span>\n            </h1>\n            <p className={`mt-2 ${darkMode ? 'text-purple-300' : 'text-purple-600'}`}>\n              AI-—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –≤–∏–¥–µ–æ –≤ —Ç–µ–∫—Å—Ç\n            </p>\n          </div>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => setShowSettings(!showSettings)}\n              className={`p-3 rounded-xl transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-purple-300' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n            >\n              <Settings size={24} />\n            </button>\n            <button\n              onClick={() => setDarkMode(!darkMode)}\n              className={`p-3 rounded-xl transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-yellow-300' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n            >\n              {darkMode ? <Sun size={24} /> : <Moon size={24} />}\n            </button>\n          </div>\n        </div>\n\n        {showSettings && (\n          <div className={`rounded-2xl p-6 ${darkMode ? 'bg-white/5 border border-white/10' : 'bg-white shadow-lg'}`}>\n            <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏\n            </h3>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                  –î–≤–∏–∂–æ–∫\n                </label>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => setEngine('openai')}\n                    className={`flex-1 p-3 rounded-xl transition-all ${engine === 'openai'\n                      ? darkMode ? 'bg-purple-500 text-white' : 'bg-purple-600 text-white'\n                      : darkMode ? 'bg-white/5 hover:bg-white/10 text-gray-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                      }`}\n                  >\n                    <Zap className=\"inline mr-2\" size={18} />\n                    OpenAI\n                  </button>\n                  <button\n                    onClick={() => setEngine('local')}\n                    className={`flex-1 p-3 rounded-xl transition-all ${engine === 'local'\n                      ? darkMode ? 'bg-purple-500 text-white' : 'bg-purple-600 text-white'\n                      : darkMode ? 'bg-white/5 hover:bg-white/10 text-gray-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                      }`}\n                  >\n                    <Server className=\"inline mr-2\" size={18} />\n                    Local\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                  <Globe className=\"inline mr-1\" size={16} />\n                  –Ø–∑—ã–∫\n                </label>\n                <select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value)}\n                  className={`w-full p-3 rounded-xl ${darkMode ? 'bg-white/5 text-white' : 'bg-gray-100 text-gray-900'} outline-none`}\n                >\n                  <option value=\"auto\">–ê–≤—Ç–æ</option>\n                  <option value=\"ru\">–†—É—Å—Å–∫–∏–π</option>\n                  <option value=\"en\">English</option>\n                  <option value=\"uk\">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>\n                  <option value=\"pl\">Polski</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={autoTranslate}\n                    onChange={(e) => setAutoTranslate(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    <Languages className=\"inline mr-1\" size={16} />\n                    –ü–µ—Ä–µ–≤–æ–¥\n                  </span>\n                </label>\n                {autoTranslate && (\n                  <select\n                    value={targetLanguage}\n                    onChange={(e) => setTargetLanguage(e.target.value)}\n                    className={`w-full mt-2 p-2 rounded-lg ${darkMode ? 'bg-white/5 text-white' : 'bg-gray-100 text-gray-900'} outline-none text-sm`}\n                  >\n                    <option value=\"ru\">‚Üí –†—É—Å—Å–∫–∏–π</option>\n                    <option value=\"en\">‚Üí English</option>\n                    <option value=\"uk\">‚Üí –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>\n                  </select>\n                )}\n              </div>\n\n              <div className=\"space-y-3\">\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={enableSegmentation}\n                    onChange={(e) => setEnableSegmentation(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è\n                  </span>\n                </label>\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={enableSpeakers}\n                    onChange={(e) => setEnableSpeakers(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    –°–ø–∏–∫–µ—Ä—ã\n                  </span>\n                </label>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2 space-y-6\">\n            <div\n              onDragOver={(e) => { e.preventDefault(); setIsDragging(true) }}\n              onDragLeave={(e) => { e.preventDefault(); setIsDragging(false) }}\n              onDrop={(e) => {\n                e.preventDefault()\n                setIsDragging(false)\n                const f = e.dataTransfer.files[0]\n                if (f) handleFileSelect(f)\n              }}\n              className={`relative rounded-2xl border-2 border-dashed transition-all p-12 text-center cursor-pointer ${isDragging\n                ? darkMode ? 'border-purple-400 bg-purple-500/20' : 'border-purple-500 bg-purple-100'\n                : darkMode ? 'border-purple-500/50 bg-white/5' : 'border-gray-300 bg-white'\n                }`}\n              onClick={() => fileInputRef.current?.click()}\n            >\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"video/*,audio/*,.avi,.mp3,.wav,.m4a,.ogg,.aac\"\n                onChange={(e) => {\n                  const f = e.target.files?.[0]\n                  if (f) handleFileSelect(f)\n                }}\n                className=\"hidden\"\n              />\n\n              <div className=\"space-y-4\">\n                <div className={`mx-auto w-20 h-20 rounded-full flex items-center justify-center ${darkMode ? 'bg-purple-500/20' : 'bg-purple-100'}`}>\n                  {file ? (\n                    mediaType === 'audio' ? <FileAudio className={darkMode ? 'text-purple-300' : 'text-purple-600'} size={40} /> : <FileVideo className={darkMode ? 'text-purple-300' : 'text-purple-600'} size={40} />\n                  ) : (\n                    <Upload className={darkMode ? 'text-purple-300' : 'text-purple-600'} size={40} />\n                  )}\n                </div>\n\n                <div>\n                  <p className={`text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                    {file ? file.name : '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ –∞—É–¥–∏–æ'}\n                  </p>\n                  <p className={`mt-2 text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                    AVI, MP4, MOV, MP3, WAV, OGG ‚Ä¢ –î–æ 500MB\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* –ë–õ–û–ö –° –ò–ù–§–û–†–ú–ê–¶–ò–ï–ô –û –§–ê–ô–õ–ï */}\n            {file && (\n              <div className={`mb-4 space-y-2 rounded-xl p-4 ${darkMode ? 'bg-white/5' : 'bg-gray-50'}`}>\n                {/* –¢–∏–ø —Ñ–∞–π–ª–∞ –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}\n                <div className={`flex items-center gap-4 text-sm ${darkMode ? 'text-purple-200/80' : 'text-gray-600'}`}>\n                  <div className=\"flex items-center gap-1.5\">\n                    {mediaType === 'audio' ? (\n                      <FileAudio className=\"w-4 h-4\" />\n                    ) : (\n                      <FileVideo className=\"w-4 h-4\" />\n                    )}\n                    <span className=\"capitalize font-medium\">{mediaType === 'audio' ? '–ê—É–¥–∏–æ' : '–í–∏–¥–µ–æ'}</span>\n                  </div>\n\n                  <div className=\"flex items-center gap-1.5\">\n                    <HardDrive className=\"w-4 h-4\" />\n                    <span>{formatFileSize(file.size)}</span>\n                  </div>\n\n                  {mediaDuration && (\n                    <div className=\"flex items-center gap-1.5\">\n                      <Clock className=\"w-4 h-4\" />\n                      <span>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {formatDuration(mediaDuration)}</span>\n                    </div>\n                  )}\n                </div>\n\n                {/* –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ */}\n                {processingStatus && (\n                  <div className={`flex items-center gap-2 text-sm rounded-lg px-3 py-2 ${darkMode ? 'bg-purple-500/20 border border-purple-400/30 text-purple-200' : 'bg-purple-100 border border-purple-300 text-purple-700'}`}>\n                    <span>{processingStatus}</span>\n                    {loading && mediaDuration && (\n                      <span className={darkMode ? 'text-purple-200/60' : 'text-purple-600/60'}>\n                        ‚Ä¢ –û–∂–∏–¥–∞–Ω–∏–µ: {estimateProcessingTime(mediaDuration)}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {videoPreview && (\n              <div className=\"rounded-xl overflow-hidden\">\n                {mediaType === 'audio' ? (\n                  <audio src={videoPreview} controls className=\"w-full\" />\n                ) : (\n                  <video src={videoPreview} controls className=\"w-full\" style={{ maxHeight: '300px' }} />\n                )}\n              </div>\n            )}\n\n            {file && (\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={startTranscription}\n                  disabled={loading}\n                  className={`flex-1 px-6 py-4 rounded-xl font-semibold transition-all ${loading\n                    ? 'bg-gray-600 cursor-not-allowed'\n                    : darkMode ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white' : 'bg-gradient-to-r from-purple-600 to-pink-600 text-white'\n                    }`}\n                >\n                  {loading ? <><Loader2 className=\"inline animate-spin mr-2\" size={20} />–û–±—Ä–∞–±–æ—Ç–∫–∞...</> : <><Play className=\"inline mr-2\" size={20} />–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞—Ç—å</>}\n                </button>\n                <button\n                  onClick={() => {\n                    setFile(null)\n                    setVideoPreview('')\n                    setTranscript('')\n                    setError('')\n                    setSuccess(false)\n                    setMediaType(null)\n                    setMediaDuration(null)\n                    setProcessingStatus('')\n                  }}\n                  disabled={loading}\n                  className={`px-6 py-4 rounded-xl font-semibold ${darkMode ? 'bg-red-500/20 text-red-300' : 'bg-red-100 text-red-700'}`}\n                >\n                  <Trash2 className=\"inline mr-2\" size={20} />\n                  –û—á–∏—Å—Ç–∏—Ç—å\n                </button>\n              </div>\n            )}\n\n            {progress && (\n              <div className={`rounded-xl p-4 ${darkMode ? 'bg-blue-500/20 border border-blue-500/30' : 'bg-blue-50'}`}>\n                <div className=\"flex items-center gap-3\">\n                  {loading && <Loader2 className=\"animate-spin\" size={20} />}\n                  {success && <CheckCircle2 className=\"text-green-500\" size={20} />}\n                  <p>{progress}</p>\n                </div>\n              </div>\n            )}\n\n            {error && (\n              <div className={`rounded-xl p-4 ${darkMode ? 'bg-red-500/20' : 'bg-red-50'}`}>\n                <div className=\"flex items-center gap-3\">\n                  <XCircle className=\"text-red-500\" size={20} />\n                  <p>{error}</p>\n                </div>\n              </div>\n            )}\n\n            {transcript && (\n              <div className={`rounded-2xl overflow-hidden ${darkMode ? 'bg-white/5' : 'bg-white shadow-lg'}`}>\n                <div className={`p-4 flex justify-between ${darkMode ? 'bg-white/10' : 'bg-gray-100'}`}>\n                  <h3 className={`font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>–†–µ–∑—É–ª—å—Ç–∞—Ç</h3>\n                  <div className=\"flex gap-2\">\n                    <button onClick={() => navigator.clipboard.writeText(transcript)} className=\"p-2 rounded-lg hover:bg-white/10\">\n                      <Copy size={18} />\n                    </button>\n                    <button onClick={() => downloadFile('transcript.txt', transcript, 'text/plain')} className=\"px-3 py-1 rounded-lg text-sm hover:bg-white/10\">TXT</button>\n                    <button onClick={() => downloadFile('transcript.json', JSON.stringify({ text: transcript }, null, 2), 'application/json')} className=\"px-3 py-1 rounded-lg text-sm hover:bg-white/10\">JSON</button>\n                    <button onClick={() => downloadFile('transcript.srt', textToSRT(transcript), 'text/plain')} className=\"px-3 py-1 rounded-lg text-sm hover:bg-white/10\">SRT</button>\n                  </div>\n                </div>\n                <textarea\n                  value={transcript}\n                  onChange={(e) => setTranscript(e.target.value)}\n                  className={`w-full h-96 p-6 resize-none outline-none ${darkMode ? 'bg-slate-900/50 text-gray-100' : 'bg-white text-gray-900'}`}\n                />\n              </div>\n            )}\n          </div>\n\n          <div>\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-white/5' : 'bg-white shadow-lg'}`}>\n              <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>–ò—Å—Ç–æ—Ä–∏—è</h3>\n              {history.length === 0 ? (\n                <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>–ü—É—Å—Ç–æ</p>\n              ) : (\n                <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                  {history.map((item) => (\n                    <div\n                      key={item.id}\n                      onClick={() => {\n                        setTranscript(item.text)\n                        setSuccess(true)\n                      }}\n                      className={`p-3 rounded-xl cursor-pointer ${darkMode ? 'bg-white/5 hover:bg-white/10' : 'bg-gray-50 hover:bg-gray-100'}`}\n                    >\n                      <p className={`text-sm font-medium truncate ${darkMode ? 'text-white' : 'text-gray-900'}`}>{item.name}</p>\n                      <p className={`text-xs mt-1 ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                        {new Date(item.date).toLocaleDateString('ru-RU')}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/app/page.tsx"],"sourcesContent":["'use client'\n\nimport AISolarTranscriber from '@/components/AISolarTranscriber'\n\nexport default function Page() {\n  return <AISolarTranscriber />\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,4TAAC,+IAAkB;;;;;AAC5B;KAFwB","debugId":null}}]
}
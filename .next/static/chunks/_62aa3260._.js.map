{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/lib/validation.ts"],"sourcesContent":["// ==========================================\n  // FILE: lib/validation.ts\n  // ==========================================\n  const allowed = [\n    'video/mp4',\n    'video/avi',\n    'video/x-msvideo',\n    'video/quicktime',\n    'video/x-matroska',\n    'video/webm'\n  ]\n  \n  export function validateFile(\n    file: File,\n    maxMB = 500\n  ): { ok: true } | { ok: false; error: string } {\n    const sizeMB = file.size / 1024 / 1024\n    if (sizeMB > maxMB) {\n      return {\n        ok: false,\n        error: `Файл слишком большой (${sizeMB.toFixed(1)}MB). Лимит ${maxMB}MB.`\n      }\n    }\n    if (!allowed.includes(file.type) && !file.name.match(/\\.(avi|mp4|mov|mkv|webm)$/i)) {\n      return {\n        ok: false,\n        error: `Неподдерживаемый тип: ${file.type || 'unknown'}`\n      }\n    }\n    return { ok: true }\n  }\n  \n  "],"names":[],"mappings":"AAAA,6CAA6C;AAC3C,0BAA0B;AAC1B,6CAA6C;;;;;AAC7C,MAAM,UAAU;IACd;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,SAAS,aACd,IAAU;QACV,QAAA,iEAAQ;IAER,MAAM,SAAS,KAAK,IAAI,GAAG,OAAO;IAClC,IAAI,SAAS,OAAO;QAClB,OAAO;YACL,IAAI;YACJ,OAAO,AAAC,yBAAuD,OAA/B,OAAO,OAAO,CAAC,IAAG,eAAmB,OAAN,OAAM;QACvE;IACF;IACA,IAAI,CAAC,QAAQ,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,+BAA+B;QAClF,OAAO;YACL,IAAI;YACJ,OAAO,AAAC,yBAA+C,OAAvB,KAAK,IAAI,IAAI;QAC/C;IACF;IACA,OAAO;QAAE,IAAI;IAAK;AACpB","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/lib/exportSRT.ts"],"sourcesContent":["// ==========================================\n// FILE: lib/exportSRT.ts\n// ==========================================\nexport function textToSRT(text: string, stepSec = 4): string {\n    const sentences = text.split(/(?<=[.!?])\\s+/).filter(Boolean)\n    const toTS = (s: number) => {\n      const hh = String(Math.floor(s / 3600)).padStart(2, '0')\n      const mm = String(Math.floor((s % 3600) / 60)).padStart(2, '0')\n      const ss = String(Math.floor(s % 60)).padStart(2, '0')\n      const ms = '000'\n      return `${hh}:${mm}:${ss},${ms}`\n    }\n    let srt = ''\n    let t = 0\n    sentences.forEach((sent, i) => {\n      const start = toTS(t)\n      const end = toTS(t + stepSec)\n      srt += `${i + 1}\\n${start} --> ${end}\\n${sent}\\n\\n`\n      t += stepSec\n    })\n    return srt.trim()\n  }\n  \n  export type Segment = { start: number; end: number; text: string; speaker?: string }\n  \n  export function segmentsToSRT(segments: Segment[]): string {\n    const toTS = (s: number) => {\n      const hh = String(Math.floor(s / 3600)).padStart(2, '0')\n      const mm = String(Math.floor((s % 3600) / 60)).padStart(2, '0')\n      const ss = String(Math.floor(s % 60)).padStart(2, '0')\n      const ms = '000'\n      return `${hh}:${mm}:${ss},${ms}`\n    }\n    return segments\n      .map((seg, i) => {\n        const line = seg.speaker ? `${seg.speaker}: ${seg.text}` : seg.text\n        return `${i + 1}\\n${toTS(seg.start)} --> ${toTS(seg.end)}\\n${line}`\n      })\n      .join('\\n\\n')\n  }\n  \n  "],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,yBAAyB;AACzB,6CAA6C;;;;;;;AACtC,SAAS,UAAU,IAAY;QAAE,UAAA,iEAAU;IAC9C,MAAM,YAAY,KAAK,KAAK,CAAC,0BAAiB,MAAM,CAAC;IACrD,MAAM,OAAO,CAAC;QACZ,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,OAAO,QAAQ,CAAC,GAAG;QACpD,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,AAAC,IAAI,OAAQ,KAAK,QAAQ,CAAC,GAAG;QAC3D,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;QAClD,MAAM,KAAK;QACX,OAAO,AAAC,GAAQ,OAAN,IAAG,KAAS,OAAN,IAAG,KAAS,OAAN,IAAG,KAAM,OAAH;IAC9B;IACA,IAAI,MAAM;IACV,IAAI,IAAI;IACR,UAAU,OAAO,CAAC,CAAC,MAAM;QACvB,MAAM,QAAQ,KAAK;QACnB,MAAM,MAAM,KAAK,IAAI;QACrB,OAAO,AAAC,GAAY,OAAV,IAAI,GAAE,MAAiB,OAAb,OAAM,SAAe,OAAR,KAAI,MAAS,OAAL,MAAK;QAC9C,KAAK;IACP;IACA,OAAO,IAAI,IAAI;AACjB;AAIO,SAAS,cAAc,QAAmB;IAC/C,MAAM,OAAO,CAAC;QACZ,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,OAAO,QAAQ,CAAC,GAAG;QACpD,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,AAAC,IAAI,OAAQ,KAAK,QAAQ,CAAC,GAAG;QAC3D,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;QAClD,MAAM,KAAK;QACX,OAAO,AAAC,GAAQ,OAAN,IAAG,KAAS,OAAN,IAAG,KAAS,OAAN,IAAG,KAAM,OAAH;IAC9B;IACA,OAAO,SACJ,GAAG,CAAC,CAAC,KAAK;QACT,MAAM,OAAO,IAAI,OAAO,GAAG,AAAC,GAAkB,OAAhB,IAAI,OAAO,EAAC,MAAa,OAAT,IAAI,IAAI,IAAK,IAAI,IAAI;QACnE,OAAO,AAAC,GAAY,OAAV,IAAI,GAAE,MAA2B,OAAvB,KAAK,IAAI,KAAK,GAAE,SAAyB,OAAlB,KAAK,IAAI,GAAG,GAAE,MAAS,OAAL;IAC/D,GACC,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/asset/Documents/IT%20project/aisolar/app/page.tsx"],"sourcesContent":["// app/page.tsx\n'use client'\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { Upload, Download, FileVideo, Loader2, CheckCircle2, XCircle, Play, Trash2, Copy, Sun, Moon, Globe, Zap, Server, Settings, Languages } from 'lucide-react';\nimport { validateVideoFile } from '@/lib/validation';\nimport { textToSRT, textToSRTWithTimestamps } from '@/lib/exportSRT';\nimport AISolarTranscriber from '@/components/AISolarTranscriber';\n\nimport AISolarTranscriber from '@/components/AISolarTranscriber'\n\n\n\ninterface HistoryItem {\n  id: string;\n  name: string;\n  text: string;\n  date: string;\n  language?: string;\n  engine?: string;\n}\n\nexport default function Page() {\n  return (\n    <main className=\"space-y-6\">\n      <AISolarTranscriber />\n    </main>\n  )\n}\n\nexport default function AISolarTranscriber() {\n  const [file, setFile] = useState<File | null>(null);\n  const [videoPreview, setVideoPreview] = useState<string>('');\n  const [transcript, setTranscript] = useState('');\n  const [progress, setProgress] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n  const [isDragging, setIsDragging] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [history, setHistory] = useState<HistoryItem[]>([]);\n  \n  // Settings\n  const [engine, setEngine] = useState<'openai' | 'local'>('openai');\n  const [language, setLanguage] = useState('auto');\n  const [autoTranslate, setAutoTranslate] = useState(false);\n  const [targetLanguage, setTargetLanguage] = useState('ru');\n  const [enableSegmentation, setEnableSegmentation] = useState(true);\n  const [enableSpeakers, setEnableSpeakers] = useState(false);\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const saved = localStorage.getItem('aisolar-history');\n    if (saved) {\n      try {\n        setHistory(JSON.parse(saved));\n      } catch (e) {\n        console.error('Failed to load history', e);\n      }\n    }\n  }, []);\n\n  const saveToHistory = useCallback((name: string, text: string) => {\n    const newEntry: HistoryItem = {\n      id: Date.now().toString(),\n      name,\n      text,\n      date: new Date().toISOString(),\n      language,\n      engine\n    };\n    const updated = [newEntry, ...history].slice(0, 10);\n    setHistory(updated);\n    localStorage.setItem('aisolar-history', JSON.stringify(updated));\n  }, [history, language, engine]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n  }, []);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile) {\n      handleFileSelect(droppedFile);\n    }\n  }, []);\n\n  const handleFileSelect = (selectedFile: File) => {\n    const validation = validateVideoFile(selectedFile);\n    \n    if (!validation.valid) {\n      setError(validation.error || 'Неверный файл');\n      setFile(null);\n      setVideoPreview('');\n      return;\n    }\n    \n    setFile(selectedFile);\n    setError('');\n    setSuccess(false);\n    setTranscript('');\n    \n    const url = URL.createObjectURL(selectedFile);\n    setVideoPreview(url);\n  };\n\n  const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (selectedFile) {\n      handleFileSelect(selectedFile);\n    }\n  };\n\n  const startTranscription = async () => {\n    if (!file) return;\n\n    setLoading(true);\n    setError('');\n    setSuccess(false);\n    setProgress('Подготовка...');\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('engine', engine);\n      formData.append('language', language);\n      formData.append('enableSegmentation', String(enableSegmentation));\n      formData.append('enableSpeakers', String(enableSpeakers));\n      formData.append('autoTranslate', String(autoTranslate));\n      if (autoTranslate && targetLanguage) {\n        formData.append('targetLanguage', targetLanguage);\n      }\n\n      const response = await fetch('/api/transcribe', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        if (response.status === 429) {\n          const data = await response.json();\n          throw new Error(data.message || 'Превышен лимит запросов');\n        }\n        throw new Error(`HTTP ${response.status}`);\n      }\n\n      const reader = response.body?.getReader();\n      const decoder = new TextDecoder();\n      let finalText = '';\n\n      if (reader) {\n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) break;\n\n          const chunk = decoder.decode(value, { stream: true });\n          const lines = chunk.split('\\n').filter(Boolean);\n\n          for (const line of lines) {\n            try {\n              const data = JSON.parse(line);\n              \n              if (data.type === 'progress') {\n                setProgress(data.message);\n              } else if (data.type === 'partial') {\n                setTranscript(data.text);\n              } else if (data.type === 'final') {\n                finalText = data.text;\n                setTranscript(data.text);\n              } else if (data.type === 'error') {\n                throw new Error(data.message);\n              }\n            } catch (e) {\n              if (e instanceof Error && !e.message.includes('JSON')) {\n                throw e;\n              }\n            }\n          }\n        }\n      }\n\n      setSuccess(true);\n      setProgress('Транскрибирование завершено! ✓');\n      \n      if (finalText) {\n        saveToHistory(file.name, finalText);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Произошла ошибка');\n      setProgress('');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const downloadTxt = () => {\n    const blob = new Blob([transcript], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `transcript_${Date.now()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadJson = () => {\n    const data = {\n      filename: file?.name,\n      timestamp: new Date().toISOString(),\n      transcript: transcript,\n      settings: {\n        engine,\n        language,\n        autoTranslate,\n        targetLanguage,\n        enableSegmentation,\n        enableSpeakers\n      },\n      metadata: {\n        fileSize: file?.size,\n        fileType: file?.type\n      }\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `transcript_${Date.now()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadSRT = () => {\n    const srtContent = enableSegmentation \n      ? textToSRTWithTimestamps(transcript)\n      : textToSRT(transcript, 4);\n    \n    const blob = new Blob([srtContent], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `subtitles_${Date.now()}.srt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(transcript);\n    alert('Текст скопирован в буфер обмена!');\n  };\n\n  const clearAll = () => {\n    setFile(null);\n    setVideoPreview('');\n    setTranscript('');\n    setProgress('');\n    setError('');\n    setSuccess(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const loadFromHistory = (item: HistoryItem) => {\n    setTranscript(item.text);\n    setSuccess(true);\n    setProgress(`Загружено из истории: ${item.name}`);\n  };\n\n  const deleteHistoryItem = (id: string) => {\n    const updated = history.filter(h => h.id !== id);\n    setHistory(updated);\n    localStorage.setItem('aisolar-history', JSON.stringify(updated));\n  };\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 ${darkMode ? 'bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900' : 'bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50'}`}>\n      <div className=\"max-w-7xl mx-auto p-6 space-y-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className={`text-4xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'} flex items-center gap-3`}>\n              <span className=\"text-5xl\">🌞</span>\n              AISOLAR\n              <span className={`text-sm px-3 py-1 rounded-full ${darkMode ? 'bg-purple-500/20 text-purple-300' : 'bg-purple-100 text-purple-700'}`}>\n                v2.0\n              </span>\n            </h1>\n            <p className={`mt-2 ${darkMode ? 'text-purple-300' : 'text-purple-600'}`}>\n              AI-транскрибация с поддержкой многоязычности и умной сегментации\n            </p>\n          </div>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => setShowSettings(!showSettings)}\n              className={`p-3 rounded-xl transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-purple-300' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n            >\n              <Settings size={24} />\n            </button>\n            <button\n              onClick={() => setDarkMode(!darkMode)}\n              className={`p-3 rounded-xl transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-yellow-300' : 'bg-gray-200 hover:bg-gray-300 text-gray-700'}`}\n            >\n              {darkMode ? <Sun size={24} /> : <Moon size={24} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Settings Panel */}\n        {showSettings && (\n          <div className={`rounded-2xl p-6 ${darkMode ? 'bg-white/5 border border-white/10' : 'bg-white shadow-lg'}`}>\n            <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n              Настройки транскрибации\n            </h3>\n            \n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                  Движок распознавания\n                </label>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => setEngine('openai')}\n                    className={`flex-1 p-3 rounded-xl transition-all ${\n                      engine === 'openai'\n                        ? darkMode ? 'bg-purple-500 text-white' : 'bg-purple-600 text-white'\n                        : darkMode ? 'bg-white/5 hover:bg-white/10 text-gray-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                    }`}\n                  >\n                    <Zap className=\"inline mr-2\" size={18} />\n                    OpenAI\n                  </button>\n                  <button\n                    onClick={() => setEngine('local')}\n                    className={`flex-1 p-3 rounded-xl transition-all ${\n                      engine === 'local'\n                        ? darkMode ? 'bg-purple-500 text-white' : 'bg-purple-600 text-white'\n                        : darkMode ? 'bg-white/5 hover:bg-white/10 text-gray-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                    }`}\n                  >\n                    <Server className=\"inline mr-2\" size={18} />\n                    Local\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                  <Globe className=\"inline mr-1\" size={16} />\n                  Язык аудио\n                </label>\n                <select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value)}\n                  className={`w-full p-3 rounded-xl ${darkMode ? 'bg-white/5 text-white' : 'bg-gray-100 text-gray-900'} outline-none`}\n                >\n                  <option value=\"auto\">Авто-определение</option>\n                  <option value=\"ru\">Русский</option>\n                  <option value=\"en\">English</option>\n                  <option value=\"uk\">Українська</option>\n                  <option value=\"pl\">Polski</option>\n                  <option value=\"de\">Deutsch</option>\n                  <option value=\"fr\">Français</option>\n                  <option value=\"es\">Español</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={autoTranslate}\n                    onChange={(e) => setAutoTranslate(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    <Languages className=\"inline mr-1\" size={16} />\n                    Автоматический перевод\n                  </span>\n                </label>\n                {autoTranslate && (\n                  <select\n                    value={targetLanguage}\n                    onChange={(e) => setTargetLanguage(e.target.value)}\n                    className={`w-full mt-2 p-2 rounded-lg ${darkMode ? 'bg-white/5 text-white' : 'bg-gray-100 text-gray-900'} outline-none text-sm`}\n                  >\n                    <option value=\"ru\">→ Русский</option>\n                    <option value=\"en\">→ English</option>\n                    <option value=\"uk\">→ Українська</option>\n                    <option value=\"pl\">→ Polski</option>\n                  </select>\n                )}\n              </div>\n\n              <div className=\"space-y-3\">\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={enableSegmentation}\n                    onChange={(e) => setEnableSegmentation(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    Умная сегментация по паузам\n                  </span>\n                </label>\n                <label className=\"flex items-center gap-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={enableSpeakers}\n                    onChange={(e) => setEnableSpeakers(e.target.checked)}\n                    className=\"w-5 h-5 rounded accent-purple-500\"\n                  />\n                  <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    Определение спикеров\n                  </span>\n                </label>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Upload Zone */}\n            <div\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n              className={`relative rounded-2xl border-2 border-dashed transition-all duration-300 ${\n                isDragging\n                  ? darkMode ? 'border-purple-400 bg-purple-500/20' : 'border-purple-500 bg-purple-100'\n                  : darkMode ? 'border-purple-500/50 bg-white/5' : 'border-gray-300 bg-white'\n              } ${darkMode ? 'hover:border-purple-400 hover:bg-white/10' : 'hover:border-purple-400 hover:bg-purple-50'} p-12 text-center cursor-pointer`}\n              onClick={() => fileInputRef.current?.click()}\n            >\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"video/*,.avi\"\n                onChange={handleFileInput}\n                className=\"hidden\"\n              />\n              \n              <div className=\"space-y-4\">\n                <div className={`mx-auto w-20 h-20 rounded-full flex items-center justify-center ${darkMode ? 'bg-purple-500/20' : 'bg-purple-100'}`}>\n                  {file ? <FileVideo className={darkMode ? 'text-purple-300' : 'text-purple-600'} size={40} /> : <Upload className={darkMode ? 'text-purple-300' : 'text-purple-600'} size={40} />}\n                </div>\n                \n                <div>\n                  <p className={`text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                    {file ? file.name : 'Перетащите видео или нажмите для выбора'}\n                  </p>\n                  <p className={`mt-2 text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                    Поддержка: AVI, MP4, MOV, MKV • До 500MB\n                  </p>\n                  {file && (\n                    <div className={`mt-3 space-y-1 text-sm ${darkMode ? 'text-purple-300' : 'text-purple-600'}`}>\n                      <p>Размер: {(file.size / 1024 / 1024).toFixed(2)} MB</p>\n                      <p>Формат: {file.type || 'video'}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {videoPreview && (\n              <div className={`rounded-2xl overflow-hidden ${darkMode ? 'bg-white/5' : 'bg-white'} p-4`}>\n                <video\n                  ref={videoRef}\n                  src={videoPreview}\n                  controls\n                  className=\"w-full rounded-xl\"\n                  style={{ maxHeight: '300px' }}\n                />\n              </div>\n            )}\n\n            {file && (\n              <div className=\"flex gap-3 flex-wrap\">\n                <button\n                  onClick={startTranscription}\n                  disabled={loading}\n                  className={`flex-1 min-w-[200px] px-6 py-4 rounded-xl font-semibold transition-all transform hover:scale-105 ${\n                    loading\n                      ? darkMode ? 'bg-gray-600 cursor-not-allowed' : 'bg-gray-300 cursor-not-allowed'\n                      : darkMode ? 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white shadow-lg shadow-purple-500/50' : 'bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white shadow-lg'\n                  }`}\n                >\n                  {loading ? (\n                    <>\n                      <Loader2 className=\"inline animate-spin mr-2\" size={20} />\n                      Обработка...\n                    </>\n                  ) : (\n                    <>\n                      <Play className=\"inline mr-2\" size={20} />\n                      Транскрибировать\n                    </>\n                  )}\n                </button>\n\n                <button\n                  onClick={clearAll}\n                  disabled={loading}\n                  className={`px-6 py-4 rounded-xl font-semibold transition-all ${\n                    darkMode ? 'bg-red-500/20 hover:bg-red-500/30 text-red-300' : 'bg-red-100 hover:bg-red-200 text-red-700'\n                  }`}\n                >\n                  <Trash2 className=\"inline mr-2\" size={20} />\n                  Очистить\n                </button>\n              </div>\n            )}\n\n            {progress && (\n              <div className={`rounded-xl p-4 ${darkMode ? 'bg-blue-500/20 border border-blue-500/30' : 'bg-blue-50 border border-blue-200'}`}>\n                <div className=\"flex items-center gap-3\">\n                  {loading && <Loader2 className={`animate-spin ${darkMode ? 'text-blue-300' : 'text-blue-600'}`} size={20} />}\n                  {success && <CheckCircle2 className=\"text-green-500\" size={20} />}\n                  <p className={`${darkMode ? 'text-blue-200' : 'text-blue-800'}`}>{progress}</p>\n                </div>\n                {loading && (\n                  <div className={`mt-3 h-2 ${darkMode ? 'bg-white/10' : 'bg-gray-200'} rounded-full overflow-hidden`}>\n                    <div className=\"h-full bg-gradient-to-r from-purple-500 to-pink-500 animate-pulse\" style={{ width: '100%' }} />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {error && (\n              <div className={`rounded-xl p-4 ${darkMode ? 'bg-red-500/20 border border-red-500/30' : 'bg-red-50 border border-red-200'}`}>\n                <div className=\"flex items-center gap-3\">\n                  <XCircle className=\"text-red-500\" size={20} />\n                  <p className={`${darkMode ? 'text-red-200' : 'text-red-800'}`}>{error}</p>\n                </div>\n              </div>\n            )}\n\n            {transcript && (\n              <div className={`rounded-2xl overflow-hidden ${darkMode ? 'bg-white/5' : 'bg-white shadow-lg'}`}>\n                <div className={`p-4 flex items-center justify-between ${darkMode ? 'bg-white/10' : 'bg-gray-100'}`}>\n                  <h3 className={`font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                    Результат транскрибации\n                  </h3>\n                  <div className=\"flex gap-2\">\n                    <button onClick={copyToClipboard} className={`p-2 rounded-lg transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-purple-300' : 'bg-purple-100 hover:bg-purple-200 text-purple-700'}`} title=\"Копировать\">\n                      <Copy size={18} />\n                    </button>\n                    <button onClick={downloadTxt} className={`px-3 py-2 rounded-lg text-sm transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-green-300' : 'bg-green-100 hover:bg-green-200 text-green-700'}`}>\n                      TXT\n                    </button>\n                    <button onClick={downloadJson} className={`px-3 py-2 rounded-lg text-sm transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-blue-300' : 'bg-blue-100 hover:bg-blue-200 text-blue-700'}`}>\n                      JSON\n                    </button>\n                    <button onClick={downloadSRT} className={`px-3 py-2 rounded-lg text-sm transition-all ${darkMode ? 'bg-white/10 hover:bg-white/20 text-orange-300' : 'bg-orange-100 hover:bg-orange-200 text-orange-700'}`}>\n                      SRT\n                    </button>\n                  </div>\n                </div>\n                <textarea\n                  value={transcript}\n                  onChange={(e) => setTranscript(e.target.value)}\n                  className={`w-full h-96 p-6 resize-none font-mono text-sm leading-relaxed outline-none ${\n                    darkMode ? 'bg-slate-900/50 text-gray-100' : 'bg-white text-gray-900'\n                  }`}\n                  placeholder=\"Транскрибированный текст появится здесь...\"\n                />\n                <div className={`p-3 text-xs flex justify-between ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  <span>{transcript.length} символов · {transcript.split(/\\s+/).filter(Boolean).length} слов</span>\n                  <span>Язык: {language === 'auto' ? 'Авто' : language.toUpperCase()} · {engine === 'openai' ? 'OpenAI' : 'Local'}</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"space-y-6\">\n            <div className={`rounded-2xl p-6 ${darkMode ? 'bg-white/5' : 'bg-white shadow-lg'}`}>\n              <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                История\n              </h3>\n              \n              {history.length === 0 ? (\n                <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  История пуста\n                </p>\n              ) : (\n                <div className=\"space-y-3 max-h-[600px] overflow-y-auto\">\n                  {history.map((item) => (\n                    <div\n                      key={item.id}\n                      className={`p-3 rounded-xl cursor-pointer transition-all ${\n                        darkMode ? 'bg-white/5 hover:bg-white/10' : 'bg-gray-50 hover:bg-gray-100'\n                      }`}\n                    >\n                      <div className=\"flex items-start justify-between gap-2\">\n                        <div className=\"flex-1 min-w-0\" onClick={() => loadFromHistory(item)}>\n                          <p className={`text-sm font-medium truncate ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                            {item.name}\n                          </p>\n                          <p className={`text-xs mt-1 ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                            {new Date(item.date).toLocaleDateString('ru-RU', {\n                              day: 'numeric',\n                              month: 'short',\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })}\n                          </p>\n                          <p className={`text-xs mt-2 line-clamp-2 ${darkMode ? 'text-gray-500' : 'text-gray-700'}`}>\n                            {item.text}\n                          </p>\n                        </div>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            deleteHistoryItem(item.id);\n                          }}\n                          className={`p-1 rounded transition-colors ${darkMode ? 'hover:bg-red-500/20 text-red-400' : 'hover:bg-red-100 text-red-600'}`}\n                        >\n                          <Trash2 size={14} />\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className={`text-center py-6 border-t ${darkMode ? 'border-white/10 text-gray-400' : 'border-gray-200 text-gray-600'}`}>\n          <p className=\"text-sm\">\n            AISOLAR v2.0 · Powered by Next.js 14 + OpenAI + FFmpeg\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}